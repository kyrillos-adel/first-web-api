// <auto-generated />
using System;
using Lab1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab1.Data
{
    [DbContext(typeof(SDbContext))]
    [Migration("20250326131251_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lab1.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Location = "EG",
                            ManagerName = "John Doe",
                            Name = "Computer Science"
                        },
                        new
                        {
                            Id = 2,
                            Location = "USA",
                            ManagerName = "Jane Smith",
                            Name = "Mathematics"
                        },
                        new
                        {
                            Id = 3,
                            Location = "USA",
                            ManagerName = "Alice Johnson",
                            Name = "Physics"
                        },
                        new
                        {
                            Id = 4,
                            Location = "EG",
                            ManagerName = "Bob Brown",
                            Name = "Chemistry"
                        });
                });

            modelBuilder.Entity("Lab1.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Birthdate")
                        .HasColumnType("date");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St, New York, NY",
                            Age = 32,
                            Birthdate = new DateOnly(1991, 5, 15),
                            DepartmentId = 1,
                            ImageUrl = "https://example.com/images/john-smith.jpg",
                            Name = "John Smith"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Oak Ave, Los Angeles, CA",
                            Age = 28,
                            Birthdate = new DateOnly(1995, 8, 22),
                            DepartmentId = 2,
                            ImageUrl = "https://example.com/images/emily-johnson.jpg",
                            Name = "Emily Johnson"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Pine Rd, Chicago, IL",
                            Age = 45,
                            Birthdate = new DateOnly(1978, 11, 3),
                            DepartmentId = 3,
                            Name = "Michael Brown"
                        },
                        new
                        {
                            Id = 4,
                            Address = "321 Elm Blvd, Houston, TX",
                            Age = 24,
                            Birthdate = new DateOnly(1999, 2, 18),
                            DepartmentId = 4,
                            ImageUrl = "https://example.com/images/sarah-davis.png",
                            Name = "Sarah Davis"
                        });
                });

            modelBuilder.Entity("Lab1.Models.Student", b =>
                {
                    b.HasOne("Lab1.Models.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Lab1.Models.Department", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
